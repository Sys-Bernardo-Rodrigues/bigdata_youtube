Prompt

Usar o dataset para capturar metricas de como creçer no youtuber e gerar rendas, "o mesmo deve focar em como um canal 
criado agora deve fazer"!

pegar metricas





Ponto a focar
PEGAR MAIORES GANHOS! SEPERA POR CATEGORIA ! SEPARAR POR TIPO DE CANAL  


Verificar !!!!

Nicho e público-alvo




lowest_monthly_earnings	
highest_monthly_earnings	
lowest_yearly_earnings	
highest_yearly_earnings









Treinamento do Modelo de IA
Aqui você pode usar um algoritmo de aprendizado de máquina para prever o crescimento do canal com base em diferentes métricas.


from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Definir features (X) e target (y)
X = dataset[['visualizacoes', 'comentarios', 'likes']]
y = dataset['inscritos']

# Dividir os dados em conjunto de treinamento e teste
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Treinar o modelo de regressão linear
model = LinearRegression()
model.fit(X_train, y_train)

# Prever inscritos
y_pred = model.predict(X_test)

# Avaliar o modelo
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)


 Gerar Insights
Use o modelo treinado para fornecer insights sobre como um canal pode crescer mais rapidamente.

# Função para gerar insights
def gerar_insights(visualizacoes, comentarios, likes):
    inscritos_previstos = model.predict([[visualizacoes, comentarios, likes]])
    return inscritos_previstos[0]

# Exemplo de uso
visualizacoes = 100000
comentarios = 1000
likes = 5000
inscritos_previstos = gerar_insights(visualizacoes, comentarios, likes)
print("Inscritos Previstos:", inscritos_previstos)